{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddNewPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","content","profile","img","info","avatar","description","about","list","uploadFile","fullName","profileInfo","button","placeholder","social","title","descr","posts","newPost","form","textarea","err","post","like","Post","props","react_default","a","createElement","className","classes","src","alt","message","validatePostForm","values","errors","newPostText","AddNewPost","formik_esm","initialValues","validate","onSubmit","_ref","resetForm","addNewPost","status","name","as","rows","messageSend","component","disabled","isValid","dirty","type","MyPosts","React","memo","Object","toConsumableArray","reverse","map","MyPosts_Post_Post","id","key","likesCount","MyPosts_AddNewPost","addPost","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileDataForm","saveProfile","setEditMode","lookingForAJob","lookingForAJobDescription","aboutMe","contacts.","_ref2","setStatus","then","input","keys","contacts","error","ProfileStatus","editMode","_this","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","Component","Contact","href","ProfileData","isOwner","goToEditMode","onClick","ProfileInfo_Contact","ProfileInfo","_useState","useState","_useState2","slicedToArray","Preloader","photos","large","userPhoto","target","files","length","savePhoto","ProfileInfo_ProfileStatus","ProfileInfo_ProfileDataForm","ProfileInfo_ProfileData","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","router","params","loginingUserId","navigate","getUserProfile","getUserStatus","refreshProfile","snapshot","components_Profile_Profile","assign","compose","auth","isAuth","location","useLocation","useNavigate","useParams"],"mappings":"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","file":"static/js/3.f4ae282a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2-dYo\",\"profile\":\"ProfileInfo_profile__V5OPu\",\"img\":\"ProfileInfo_img__31Fgw\",\"info\":\"ProfileInfo_info__nV8yS\",\"avatar\":\"ProfileInfo_avatar__2MPVc\",\"description\":\"ProfileInfo_description__3ClBJ\",\"about\":\"ProfileInfo_about__2rf6p\",\"list\":\"ProfileInfo_list__3ZxbH\",\"uploadFile\":\"ProfileInfo_uploadFile__1r0ga\",\"fullName\":\"ProfileInfo_fullName__1zY1p\",\"profileInfo\":\"ProfileInfo_profileInfo__3d89U\",\"button\":\"ProfileInfo_button__2XM2l\",\"placeholder\":\"ProfileInfo_placeholder__QtGfu\",\"social\":\"ProfileInfo_social__h4roL\",\"title\":\"ProfileInfo_title__FjxNL\",\"descr\":\"ProfileInfo_descr__2zCk9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2Qcd9\",\"posts\":\"MyPosts_posts__1kA2F\",\"newPost\":\"MyPosts_newPost__3x_BZ\",\"form\":\"MyPosts_form__TRYCk\",\"textarea\":\"MyPosts_textarea__2DvyR\",\"button\":\"MyPosts_button__iPQqA\",\"err\":\"MyPosts_err__3XA7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__2BjQJ\",\"post\":\"Post_post__3OGf5\",\"like\":\"Post_like__lpwV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__4KUod\",\"img\":\"Profile_img__LEbog\",\"info\":\"Profile_info__2SRbW\",\"avatar\":\"Profile_avatar__3Jdj4\",\"description\":\"Profile_description__3o_2K\"};","import React from 'react';\r\nimport classes from './Post.module.css'\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.post}>\r\n      <img className={classes.img} src={props.src} alt='' />\r\n      {props.message}\r\n      <span className={classes.title}></span>\r\n      <button className={classes.like}> Likes</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst validatePostForm = values => {\r\n  const errors = {};\r\n  if (!values.newPostText) {\r\n    errors.newPostText = 'Enter a message';\r\n  } \r\n  return errors;\r\n};\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        newPostText: '',\r\n      }}\r\n      validate={validatePostForm}\r\n      onSubmit={(values, { resetForm }) => {\r\n        props.addNewPost(values)\r\n        resetForm(\r\n          {\r\n            values: '',\r\n          }\r\n        )\r\n      }}\r\n    >\r\n      {(status) => (\r\n        <Form className={classes.form}>\r\n          <div className={classes.textarea}>\r\n            <Field\r\n              name={'newPostText'}\r\n              as={'textarea'}\r\n              rows='2'\r\n              placeholder={'You message'}\r\n              className={classes.messageSend}\r\n            // key={onNewMessageChange}\r\n            />\r\n            <ErrorMessage name=\"newPostText\" component='div'  className={classes.err} />\r\n          </div>\r\n          \r\n          <button disabled={!(status.isValid && status.dirty)}  className={classes.button}  type={'submit'}>Send</button>\r\n        </Form>\r\n\r\n      )}\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default AddNewPost;","import React from 'react';\r\nimport Post from './Post/Post';\r\n\r\nimport classes from './MyPosts.module.css'\r\nimport AddNewPost from './AddNewPost';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let post = [...props.posts].reverse().map(post => <Post src={post.src} id={post.id} key={post.message} message={post.message} likesCount={post.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n  return (\r\n    <div className={classes.posts}>\r\n      <h2>My Posts</h2>\r\n      <div className={classes.newPost}>\r\n        <AddNewPost  addNewPost={addNewPost}/>\r\n      </div>\r\n      {post}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","import MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../Redux/profile-reducer';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewPostText: (text) => {\r\n    //   let action = updateNewPostTextActionCreator(text)\r\n    //   dispatch(action)\r\n    // },\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css';\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\n\r\n\r\nconst ProfileDataForm = ({ profile, saveProfile, setEditMode }) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        fullName: profile.fullName || 'name',\r\n        lookingForAJob: profile.lookingForAJob,\r\n        lookingForAJobDescription: profile.lookingForAJobDescription || 'looking for a job',\r\n        aboutMe: profile.aboutMe || 'about me',\r\n        'contacts.': '',\r\n      }}\r\n      // validate={validateLoginForm}\r\n      // validationSchema={validationSchemaLoginForm}\r\n      onSubmit={(values, { setStatus }) => {\r\n        saveProfile(values, setStatus).then(() => {\r\n\r\n          setEditMode(false)\r\n        })\r\n\r\n      }}\r\n    >\r\n      {(status) => (\r\n        <Form >\r\n          <button type={'submit'} className={classes.button}>Save</button>\r\n          <div className={classes.input}>\r\n            <div className={classes.description}>\r\n              <span className={classes.about}>\r\n                <b className={classes.title}>Your name</b>\r\n                <Field name={'fullName'} type={'text'} placeholder={'Your name'} />\r\n              </span>\r\n            </div>\r\n\r\n            <div className={classes.description}>\r\n              <span className={classes.about}>\r\n                <b className={classes.title}>About: </b>\r\n                <Field name={'aboutMe'} className={classes.placeholder} as={'textarea'} placeholder={'Your name'} />\r\n              </span>\r\n              <span className={classes.about}>\r\n                <b className={classes.title}>Looking for a job: </b>\r\n                <Field\r\n                  type={'checkbox'}\r\n                  name={'lookingForAJob'}\r\n                  id='lookingForAJob' />\r\n              </span>\r\n              <span className={classes.about}>\r\n                <b className={classes.title}>Looking for a job description: </b>\r\n                <Field name={'lookingForAJobDescription'} className={classes.placeholder} as={'textarea'} placeholder={'Looking for a job description'} />\r\n              </span>\r\n            </div>\r\n            <div className={classes.description}>\r\n              <b className={classes.title}>Contacts</b>\r\n              {Object.keys(profile.contacts).map(key => {\r\n                return (\r\n                  <span className={classes.about}>\r\n                    <div className={classes.social}>{key}</div>\r\n                    <Field name={'contacts.' + key} values={key} type={'text'} placeholder={key} />\r\n\r\n                  </span>\r\n                )\r\n              })}\r\n\r\n            </div>\r\n            {/* <div className={classes.description}>\r\n              <span className={classes.about}>\r\n                <b>Looking for a job: </b>\r\n                {profile.lookingForAJob ? 'yes' : 'no'}\r\n              </span>\r\n              {profile.lookingForAJob &&\r\n                <span className={classes.about}>{profile.lookingForAJobDescription}</span>\r\n              }\r\n              <Field\r\n                type={'checkbox'}\r\n                name={'lookingForAJob'}\r\n                id='lookingForAJob' />\r\n              <label htmlFor={'lookingForAJob'}> remember me </label>\r\n            </div> */}\r\n          </div>\r\n          <div className={classes.error}>{status.status}</div>\r\n        </Form>\r\n      )}\r\n\r\n    </Formik>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default ProfileDataForm","import React from 'react';\r\n\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  }\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status)\r\n  }\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n        \r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.status}>\r\n        {!this.state.editMode &&\r\n          <span onDoubleClick={this.activateEditMode} className={classes.description}>{this.props.status || 'No status'}</span>\r\n        }\r\n\r\n        {this.state.editMode &&\r\n          <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} type=\"text\" placeholder='Your status' />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// import classes from './ProfileInfo.module.css';\r\n\r\n// const ProfileStatus = (props) => {\r\n\r\n  \r\n//   let [editMode, setEditMode] = useState(false);\r\n//   let [status, setStatus] = useState(props.status);\r\n\r\n//   useEffect(() => {\r\n//     setStatus(props.status)\r\n\r\n//   }, [props.status]);\r\n\r\n//   const activateEditMode = () => {\r\n//     setEditMode(true)\r\n//   }\r\n//   const deactivateEditMode = () => {\r\n//     setEditMode(false)\r\n//     props.updateStatus(status)\r\n//   }\r\n\r\n//   const onStatusChange = (e) => {\r\n//     setStatus( e.currentTarget.value)\r\n//   }\r\n\r\n\r\n//     return (\r\n//       <div className={classes.status}>\r\n//         {!editMode &&\r\n//           <span onDoubleClick={activateEditMode} className=\"description\">{props.status || 'No status'}</span>\r\n//         }\r\n\r\n//         {editMode &&\r\n//           <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}  type=\"text\" placeholder='Your status' />\r\n//         }\r\n//       </div>\r\n//     )\r\n\r\n// }\r\n\r\n// export default ProfileStatus;","import React, { useState } from 'react';\r\n\r\nimport userPhoto from '../../../assets/images/avatar.png'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileDataForm  from './ProfileDataForm';\r\n\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = (props) => {\r\n  let [editMode, setEditMode] = useState(false)\r\n\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const mainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      props.savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <div className={classes.info}>\r\n        <div className={classes.description}>\r\n          <img className={classes.avatar} src={props.profile.photos.large || userPhoto} alt='' />\r\n          <div className={classes.profileInfo}>\r\n            <span className={classes.fullName}>{props.profile.fullName}</span>\r\n            {\r\n              props.isOwner && <input className={classes.uploadFile} onChange={mainPhotoSelected} type=\"file\" name=\"\" id=\"\" />\r\n            }\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className={classes.description}>\r\n          <span className={classes.about}>\r\n            <b>Status: </b>\r\n            <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\r\n          </span>\r\n        </div>\r\n        {\r\n          editMode\r\n            ? <ProfileDataForm setEditMode={() => {setEditMode()}} saveProfile={props.saveProfile} profile={props.profile} />\r\n            : <ProfileData\r\n              goToEditMode={() => {setEditMode(true)}}\r\n              profile={props.profile}\r\n              isOwner={props.isOwner}\r\n            />\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Contact = ({ title, value }) => {\r\n  return (\r\n    <li className={classes.list}>\r\n      <a href='/'>\r\n        {value || title}\r\n      </a>\r\n    </li>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div className={classes.descr}>\r\n      {\r\n        isOwner && <button onClick={goToEditMode} className={classes.button}>Button edit</button>\r\n      }\r\n\r\n      <div className={classes.description}>\r\n        <span className={classes.about}>\r\n          <b>About: </b>\r\n          {profile.aboutMe ? profile.aboutMe : 'about me'}\r\n          </span>\r\n        <span className={classes.about}>\r\n          <b>Looking for a job: </b>\r\n          {profile.lookingForAJob ? 'yes' : 'no'}\r\n        </span>\r\n        <span className={classes.about}>\r\n          <b>Looking for a job description: </b>\r\n          {profile.lookingForAJob && profile.lookingForAJobDescription}\r\n        \r\n        </span>\r\n        \r\n\r\n      </div>\r\n      <div className={classes.description}>\r\n        <ul className={classes.title}>\r\n          <b>Contacts: </b>\r\n          {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} title={key} value={profile.contacts[key]} />\r\n        })}\r\n        </ul>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={classes.content}>\r\n      <ProfileInfo\r\n        isOwner={props.isOwner}\r\n        savePhoto={props.savePhoto}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n        saveProfile={props.saveProfile}\r\n      />\r\n\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateStatus, savePhoto, saveProfile } from '../../Redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.loginingUserId;\r\n      if (!userId) {\r\n        this.props.router.navigate('/login');\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(this.props.router.params.userId !== prevProps.router.params.userId) \r\n    this.refreshProfile()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        isOwner={!this.props.router.params.userId}\r\n        savePhoto={this.props.savePhoto}\r\n        saveProfile={this.props.saveProfile}\r\n        {...this.props}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loginingUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nlet withRouter = (Component) => {\r\n  const ComponentWithRouterProps = (props) => {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return ComponentWithRouterProps\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus, savePhoto, saveProfile }), withRouter)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}