{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddNewPost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","content","posts","newPost","form","textarea","button","err","img","info","avatar","description","about","list","post","like","Post","props","react_default","a","createElement","className","classes","src","alt","message","title","validatePostForm","values","errors","newPostText","AddNewPost","formik_esm","initialValues","validate","onSubmit","_ref","resetForm","addNewPost","status","name","as","rows","placeholder","messageSend","component","disabled","isValid","dirty","type","MyPosts","React","memo","Object","toConsumableArray","reverse","map","MyPosts_Post_Post","id","key","likesCount","MyPosts_AddNewPost","addPost","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatus","editMode","_this","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","Component","ProfileInfo","profile","photos","small","userPhoto","fullName","ProfileInfo_ProfileStatus","aboutMe","lookingForAJobDescription","href","contacts","facebook","vk","instagram","github","website","Preloader","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","router","params","loginingUserId","navigate","getUserProfile","getUserStatus","components_Profile_Profile","compose","auth","isAuth","location","useLocation","useNavigate","useParams","assign"],"mappings":"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","file":"static/js/3.94c376c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"MyPosts_content__2Qcd9\",\"posts\":\"MyPosts_posts__1kA2F\",\"newPost\":\"MyPosts_newPost__3x_BZ\",\"form\":\"MyPosts_form__TRYCk\",\"textarea\":\"MyPosts_textarea__2DvyR\",\"button\":\"MyPosts_button__iPQqA\",\"err\":\"MyPosts_err__3XA7X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"ProfileInfo_content__2-dYo\",\"img\":\"ProfileInfo_img__31Fgw\",\"info\":\"ProfileInfo_info__nV8yS\",\"avatar\":\"ProfileInfo_avatar__2MPVc\",\"description\":\"ProfileInfo_description__3ClBJ\",\"about\":\"ProfileInfo_about__2rf6p\",\"list\":\"ProfileInfo_list__3ZxbH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__2BjQJ\",\"post\":\"Post_post__3OGf5\",\"like\":\"Post_like__lpwV5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__4KUod\",\"img\":\"Profile_img__LEbog\",\"info\":\"Profile_info__2SRbW\",\"avatar\":\"Profile_avatar__3Jdj4\",\"description\":\"Profile_description__3o_2K\"};","import React from 'react';\r\nimport classes from './Post.module.css'\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.post}>\r\n      <img className={classes.img} src={props.src} alt='' />\r\n      {props.message}\r\n      <span className={classes.title}></span>\r\n      <button className={classes.like}> Likes</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\n\r\nconst validatePostForm = values => {\r\n  const errors = {};\r\n  if (!values.newPostText) {\r\n    errors.newPostText = 'Enter a message';\r\n  } \r\n  return errors;\r\n};\r\n\r\n\r\nconst AddNewPost = (props) => {\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        newPostText: '',\r\n      }}\r\n      validate={validatePostForm}\r\n      onSubmit={(values, { resetForm }) => {\r\n        props.addNewPost(values)\r\n        resetForm(\r\n          {\r\n            values: '',\r\n          }\r\n        )\r\n      }}\r\n    >\r\n      {(status) => (\r\n        <Form className={classes.form}>\r\n          <div className={classes.textarea}>\r\n            <Field\r\n              name={'newPostText'}\r\n              as={'textarea'}\r\n              rows='2'\r\n              placeholder={'You message'}\r\n              className={classes.messageSend}\r\n            // key={onNewMessageChange}\r\n            />\r\n            <ErrorMessage name=\"newPostText\" component='div'  className={classes.err} />\r\n          </div>\r\n          \r\n          <button disabled={!(status.isValid && status.dirty)}  className={classes.button}  type={'submit'}>Send</button>\r\n        </Form>\r\n\r\n      )}\r\n\r\n    </Formik>\r\n  )\r\n}\r\n\r\nexport default AddNewPost;","import React from 'react';\r\nimport Post from './Post/Post';\r\n\r\nimport classes from './MyPosts.module.css'\r\nimport AddNewPost from './AddNewPost';\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let post = [...props.posts].reverse().map(post => <Post src={post.src} id={post.id} key={post.message} message={post.message} likesCount={post.likesCount} />);\r\n\r\n  let addNewPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n  return (\r\n    <div className={classes.posts}>\r\n      <h2>My Posts</h2>\r\n      <div className={classes.newPost}>\r\n        <AddNewPost  addNewPost={addNewPost}/>\r\n      </div>\r\n      {post}\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;\r\n\r\n\r\n","import MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../Redux/profile-reducer';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    newPostText: state.profilePage.newPostText,\r\n    posts: state.profilePage.posts\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    // updateNewPostText: (text) => {\r\n    //   let action = updateNewPostTextActionCreator(text)\r\n    //   dispatch(action)\r\n    // },\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  }\r\n\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status,\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true,\r\n    });\r\n  }\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n    });\r\n    this.props.updateStatus(this.state.status)\r\n  }\r\n\r\n  onStatusChange = (e) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if(prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status,\r\n        \r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.status}>\r\n        {!this.state.editMode &&\r\n          <span onDoubleClick={this.activateEditMode} className=\"description\">{this.props.status || 'No status'}</span>\r\n        }\r\n\r\n        {this.state.editMode &&\r\n          <input onChange={this.onStatusChange} autoFocus={true} onBlur={this.deactivateEditMode} value={this.state.status} type=\"text\" placeholder='Your status' />\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n\r\n// import classes from './ProfileInfo.module.css';\r\n\r\n// const ProfileStatus = (props) => {\r\n\r\n  \r\n//   let [editMode, setEditMode] = useState(false);\r\n//   let [status, setStatus] = useState(props.status);\r\n\r\n//   useEffect(() => {\r\n//     setStatus(props.status)\r\n\r\n//   }, [props.status]);\r\n\r\n//   const activateEditMode = () => {\r\n//     setEditMode(true)\r\n//   }\r\n//   const deactivateEditMode = () => {\r\n//     setEditMode(false)\r\n//     props.updateStatus(status)\r\n//   }\r\n\r\n//   const onStatusChange = (e) => {\r\n//     setStatus( e.currentTarget.value)\r\n//   }\r\n\r\n\r\n//     return (\r\n//       <div className={classes.status}>\r\n//         {!editMode &&\r\n//           <span onDoubleClick={activateEditMode} className=\"description\">{props.status || 'No status'}</span>\r\n//         }\r\n\r\n//         {editMode &&\r\n//           <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}  type=\"text\" placeholder='Your status' />\r\n//         }\r\n//       </div>\r\n//     )\r\n\r\n// }\r\n\r\n// export default ProfileStatus;","import React from 'react';\r\n\r\nimport userPhoto from '../../../assets/images/avatar.png'\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nimport classes from './ProfileInfo.module.css';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.profile}>\r\n      <div className={classes.img}>\r\n{/* \r\n        <img src='https://images.unsplash.com/photo-1657053543559-5845ec792c0e?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDMxfENEd3V3WEpBYkV3fHxlbnwwfHx8fA%3D%3D&auto=format&fit=crop&w=500&q=60' alt='' /> */}\r\n      </div>\r\n      <div className={classes.info}>\r\n        <img className={classes.avatar} src={props.profile.photos.small !== null ? props.profile.photos.small : userPhoto} alt='' />\r\n        <div className={classes.description}>\r\n          <span className={classes.about}>{props.profile.fullName}</span>\r\n          <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n          <span className={classes.about}>{props.profile.aboutMe}</span>\r\n          <span className={classes.about}>{props.profile.lookingForAJobDescription}</span>\r\n        </div>\r\n        <div className={classes.description}>\r\n          <ul className=\"title\">Contacts:</ul>\r\n          <li className={classes.list}>\r\n            <a href='https://google.com'>\r\n              {props.profile.contacts.facebook}\r\n            </a>\r\n          </li>\r\n          <li className={classes.list}>\r\n            <a href='https://google.com'>\r\n              {props.profile.contacts.vk}\r\n            </a>\r\n          </li>\r\n          <li className={classes.list}>\r\n            <a href='https://google.com'>\r\n              {props.profile.contacts.instagram}\r\n            </a>\r\n          </li>\r\n          <li className={classes.list}>\r\n            <a href='https://google.com'>\r\n              {props.profile.contacts.github}\r\n            </a>\r\n          </li>\r\n          <li className={classes.list}>\r\n            <a href='https://google.com'>\r\n              {props.profile.contacts.website}\r\n            </a>\r\n          </li>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nimport classes from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n\r\n    \r\n\r\n    <div className={classes.content}>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n\r\n      <MyPostsContainer/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getUserStatus, updateStatus } from '../../Redux/profile-reducer';\r\nimport Profile from './Profile';\r\nimport {  useLocation, useNavigate, useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.router.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.loginingUserId;\r\n      if (!userId) {\r\n        this.props.router.navigate('/login');\r\n      }\r\n    }\r\n\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n      />\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loginingUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nlet withRouter = (Component) => {\r\n  const ComponentWithRouterProps = (props) => {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return ComponentWithRouterProps\r\n\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { getUserProfile, getUserStatus, updateStatus }), withRouter) (ProfileContainer);\r\n\r\n"],"sourceRoot":""}